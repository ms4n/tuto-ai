/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button, TextField } from '@mui/material';
import { styled } from '@mui/material/styles';
import TutoNav from 'components/TutoNav/TutoNav';
import { TutoAiProps } from 'types';

const TutoAi1: any = styled('div')({
  backgroundImage: `url(assets/images/TutoAI_Tuto_AI.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  height: '100vh',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `1440px`,
});


const Hero: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `790px`,
  width: `1440px`,
  margin: `0px`,
});

const HeroLeftSide: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px 0px 0px 145px`,
  boxSizing: `border-box`,
  width: `745px`,
  height: `553px`,
  left: `0px`,
  top: `95px`,
});

const MasterMathFasterAiPo: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `500`,
  fontSize: `76px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `94px`,
  textTransform: `none`,
  width: `635px`,
  margin: `0px`,
});

const ExperienceMathEducat: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `300`,
  fontSize: `26px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  height: `123px`,
  width: `538px`,
  margin: `54px 0px 0px 0px`,
});

const GirlStudying: any = styled('div')({
  backgroundImage: `url(assets/images/TutoAI_girl_studying.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `0px`,
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  height: `545px`,
  width: `771px`,
  left: `683px`,
  top: `8px`,
});

const Group1: any = styled('div')({
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `531px`,
  height: `42px`,
  left: `145px`,
  top: `704px`,
});

const ButtonContained: any = styled(Button)(({ theme }: any) => ({
  width: `117.42px`,
  position: `absolute`,
  left: `414px`,
  top: `0px`,
  color: theme.palette['Info']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const TextFieldOutlined: any = styled(TextField)(({ theme }: any) => ({
  width: `385.54px`,
  position: `absolute`,
  left: `0px`,
  top: `2px`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Components']['Input Text'].fontStyle,
  fontFamily: theme.typography['Components']['Input Text'].fontFamily,
  fontWeight: theme.typography['Components']['Input Text'].fontWeight,
  fontSize: theme.typography['Components']['Input Text'].fontSize,
  letterSpacing: theme.typography['Components']['Input Text'].letterSpacing,
  lineHeight: theme.typography['Components']['Input Text'].lineHeight,
  textDecoration: theme.typography['Components']['Input Text'].textDecoration,
  textTransform: theme.typography['Components']['Input Text'].textTransform,
}));

function TutoAi(props: TutoAiProps): JSX.Element {
  return (
    <TutoAi1 className={props.className}>
      <TutoNav />
      <Hero>
        <HeroLeftSide>
          <MasterMathFasterAiPo>
            {`Master Math Faster: AI-Powered Learning Solutions`}
          </MasterMathFasterAiPo>
          <ExperienceMathEducat>
            {`Experience math education that's not bound by gravity. Join us as we defy limits and reach for the stars.`}
          </ExperienceMathEducat>
          <GirlStudying></GirlStudying>
        </HeroLeftSide>
        <Group1>
          <ButtonContained
            variant="contained"
            size={'large'}
            color={'info'}
            disabled={false}
          >
            {'Go'}
          </ButtonContained>
          <TextFieldOutlined
            size={'small'}
            disabled={false}
            multiline={false}
            label={'Try out a math equation:'}
          />
        </Group1>
      </Hero>
    </TutoAi1>
  );
}

export default TutoAi;
